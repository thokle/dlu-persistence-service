//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dlu_persistence_api
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DiMPdotNetDevEntities : DbContext
    {
        public DiMPdotNetDevEntities()
            : base("name=DiMPdotNetDevEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<dtproperty> dtproperties { get; set; }
        public virtual DbSet<KontaktTitler> KontaktTitlers { get; set; }
        public virtual DbSet<OpdateringsTekst> OpdateringsTeksts { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblAnnoncekontrol> tblAnnoncekontrols { get; set; }
        public virtual DbSet<tblBladDækning> tblBladDækning { get; set; }
        public virtual DbSet<tblBladKommentar> tblBladKommentars { get; set; }
        public virtual DbSet<tblBladnavnMappingFraDO> tblBladnavnMappingFraDOes { get; set; }
        public virtual DbSet<tblBladRabat> tblBladRabats { get; set; }
        public virtual DbSet<tblBladRabatter> tblBladRabatters { get; set; }
        public virtual DbSet<tblBladStamdata> tblBladStamdatas { get; set; }
        public virtual DbSet<tblBladStamdataKopi> tblBladStamdataKopis { get; set; }
        public virtual DbSet<tblBladTillaeg> tblBladTillaegs { get; set; }
        public virtual DbSet<tblBladTillaegsType> tblBladTillaegsTypes { get; set; }
        public virtual DbSet<tblBladUdsendingKontakter> tblBladUdsendingKontakters { get; set; }
        public virtual DbSet<tblBrugerData> tblBrugerDatas { get; set; }
        public virtual DbSet<tblDage> tblDages { get; set; }
        public virtual DbSet<tblDelOmråde> tblDelOmråde { get; set; }
        public virtual DbSet<tblDPKulør> tblDPKulør { get; set; }
        public virtual DbSet<tblEjerforhold> tblEjerforholds { get; set; }
        public virtual DbSet<tblFakturaFejl> tblFakturaFejls { get; set; }
        public virtual DbSet<tblFakturaFejlTekst> tblFakturaFejlTeksts { get; set; }
        public virtual DbSet<tblFaktureringsBilag> tblFaktureringsBilags { get; set; }
        public virtual DbSet<tblFejlTekst> tblFejlTeksts { get; set; }
        public virtual DbSet<tblGeoKode> tblGeoKodes { get; set; }
        public virtual DbSet<tblGrupper> tblGruppers { get; set; }
        public virtual DbSet<tblGruppeRabatter> tblGruppeRabatters { get; set; }
        public virtual DbSet<tblHovedGruppe> tblHovedGruppes { get; set; }
        public virtual DbSet<tblKonkurrentDækning> tblKonkurrentDækning { get; set; }
        public virtual DbSet<tblKonkurrenter> tblKonkurrenters { get; set; }
        public virtual DbSet<tblKontaktArbOmråder> tblKontaktArbOmråder { get; set; }
        public virtual DbSet<tblKontakter> tblKontakters { get; set; }
        public virtual DbSet<tblKontakterPrBlad> tblKontakterPrBlads { get; set; }
        public virtual DbSet<tblKontaktFunktioner> tblKontaktFunktioners { get; set; }
        public virtual DbSet<tblKontaktTitler> tblKontaktTitlers { get; set; }
        public virtual DbSet<tblMateriale> tblMateriales { get; set; }
        public virtual DbSet<tblMedieplan> tblMedieplans { get; set; }
        public virtual DbSet<tblMedieplanÆndringer> tblMedieplanÆndringer { get; set; }
        public virtual DbSet<tblMedieplanLinjer> tblMedieplanLinjers { get; set; }
        public virtual DbSet<tblMedieplanNr> tblMedieplanNrs { get; set; }
        public virtual DbSet<tblMedIGruppe> tblMedIGruppes { get; set; }
        public virtual DbSet<tblOrdreGebyrNavision> tblOrdreGebyrNavisions { get; set; }
        public virtual DbSet<tblOrdreLinjerNavision> tblOrdreLinjerNavisions { get; set; }
        public virtual DbSet<tblOrdreNavision> tblOrdreNavisions { get; set; }
        public virtual DbSet<tblPlacering> tblPlacerings { get; set; }
        public virtual DbSet<tblPostNr> tblPostNrs { get; set; }
        public virtual DbSet<tblPostNrSøgning> tblPostNrSøgning { get; set; }
        public virtual DbSet<tblPriceAsking> tblPriceAskings { get; set; }
        public virtual DbSet<tblPriser> tblPrisers { get; set; }
        public virtual DbSet<tblPrislister> tblPrislisters { get; set; }
        public virtual DbSet<tblPrislisterPrBladPrÅr> tblPrislisterPrBladPrÅr { get; set; }
        public virtual DbSet<tblPrislisterPrBladPrUge> tblPrislisterPrBladPrUges { get; set; }
        public virtual DbSet<tblRegion> tblRegions { get; set; }
        public virtual DbSet<tblRemindereSendt> tblRemindereSendts { get; set; }
        public virtual DbSet<tblStambladKontakter> tblStambladKontakters { get; set; }
        public virtual DbSet<tblStambladUdsendingEmailTyper> tblStambladUdsendingEmailTypers { get; set; }
        public virtual DbSet<tblSupportBilag> tblSupportBilags { get; set; }
        public virtual DbSet<tblWEBeMail> tblWEBeMails { get; set; }
        public virtual DbSet<tblWEBForespørgsel> tblWEBForespørgsel { get; set; }
        public virtual DbSet<tblWEBForespørgselLinjer> tblWEBForespørgselLinjer { get; set; }
        public virtual DbSet<tblWEBSendTilKollega> tblWEBSendTilKollegas { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<bladtlfogfaxkopi> bladtlfogfaxkopis { get; set; }
        public virtual DbSet<delPriser> delPrisers { get; set; }
        public virtual DbSet<HerningFolkeblad> HerningFolkeblads { get; set; }
        public virtual DbSet<tblAktiveVærdier> tblAktiveVærdier { get; set; }
        public virtual DbSet<tblAktivGruppeVersion> tblAktivGruppeVersions { get; set; }
        public virtual DbSet<tblFarveTillægWebApp> tblFarveTillægWebApp { get; set; }
        public virtual DbSet<tblMmPrisWebApp> tblMmPrisWebApps { get; set; }
        public virtual DbSet<tblPlannerPlaner> tblPlannerPlaners { get; set; }
        public virtual DbSet<tempPriser> tempPrisers { get; set; }
        public virtual DbSet<tmpNyeDeadline> tmpNyeDeadlines { get; set; }
        public virtual DbSet<tnpOrdreNr> tnpOrdreNrs { get; set; }
        public virtual DbSet<tnpOrdreNr2> tnpOrdreNr2 { get; set; }
        public virtual DbSet<tnpOrdreNr3> tnpOrdreNr3 { get; set; }
        public virtual DbSet<AktiveUgeaviserMedAlleData> AktiveUgeaviserMedAlleDatas { get; set; }
        public virtual DbSet<FakturaFejlFinde> FakturaFejlFindes { get; set; }
        public virtual DbSet<FindFejlLinjer> FindFejlLinjers { get; set; }
        public virtual DbSet<GammelAnnoncørID> GammelAnnoncørID { get; set; }
        public virtual DbSet<LPRoller> LPRollers { get; set; }
        public virtual DbSet<NavisionContact> NavisionContacts { get; set; }
        public virtual DbSet<NavisionContact2> NavisionContact2 { get; set; }
        public virtual DbSet<Salesperson> Salespersons { get; set; }
        public virtual DbSet<UgeaviserTilGrid> UgeaviserTilGrids { get; set; }
        public virtual DbSet<viewBlade> viewBlades { get; set; }
        public virtual DbSet<viewBookingListe> viewBookingListes { get; set; }
        public virtual DbSet<viewGrupper> viewGruppers { get; set; }
        public virtual DbSet<viewLinjeDiff> viewLinjeDiffs { get; set; }
        public virtual DbSet<viewOrdre> viewOrdres { get; set; }
        public virtual DbSet<viewOrdreErSendt> viewOrdreErSendts { get; set; }
        public virtual DbSet<viewOrdreFIND> viewOrdreFINDs { get; set; }
        public virtual DbSet<viewOrdreIkkeSendt> viewOrdreIkkeSendts { get; set; }
        public virtual DbSet<viewOrdreLinjer> viewOrdreLinjers { get; set; }
        public virtual DbSet<viewOrdreLinjerFIND> viewOrdreLinjerFINDs { get; set; }
        public virtual DbSet<viewOrdreSendtManglerMateriale> viewOrdreSendtManglerMateriales { get; set; }
        public virtual DbSet<viewOversigt> viewOversigts { get; set; }
        public virtual DbSet<viewUpdateStatusIMedieplan> viewUpdateStatusIMedieplans { get; set; }
        public virtual DbSet<viewUpdateStatusIMedieplanNr> viewUpdateStatusIMedieplanNrs { get; set; }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int FindNæsteVersionsNrIMedieplan(Nullable<int> medieplanNr)
        {
            var medieplanNrParameter = medieplanNr.HasValue ?
                new ObjectParameter("MedieplanNr", medieplanNr) :
                new ObjectParameter("MedieplanNr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FindNæsteVersionsNrIMedieplan", medieplanNrParameter);
        }
    
        public virtual int IndsætOrdreLinjerTilNavision()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndsætOrdreLinjerTilNavision");
        }
    
        public virtual int IndsætOrdreTilNavision()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndsætOrdreTilNavision");
        }
    
        public virtual int OpdatereDaekningtal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpdatereDaekningtal");
        }
    
        public virtual int OpdaterMedieplanNrTabel(Nullable<int> medieplanNr, Nullable<short> aktivVersion, Nullable<byte> status)
        {
            var medieplanNrParameter = medieplanNr.HasValue ?
                new ObjectParameter("MedieplanNr", medieplanNr) :
                new ObjectParameter("MedieplanNr", typeof(int));
    
            var aktivVersionParameter = aktivVersion.HasValue ?
                new ObjectParameter("AktivVersion", aktivVersion) :
                new ObjectParameter("AktivVersion", typeof(short));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpdaterMedieplanNrTabel", medieplanNrParameter, aktivVersionParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OpretForespørgsel(Nullable<byte> type, Nullable<int> medieplanNr, string annoncørNo_, string mediebureau, string konsulentCode, Nullable<byte> antalBlade, string format, Nullable<byte> antalFarver, Nullable<byte> placeringID, Nullable<byte> antalIndrykninger, Nullable<bool> visPlaceringUB, Nullable<System.DateTime> svarInden, string bemærkning)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(byte));
    
            var medieplanNrParameter = medieplanNr.HasValue ?
                new ObjectParameter("MedieplanNr", medieplanNr) :
                new ObjectParameter("MedieplanNr", typeof(int));
    
            var annoncørNo_Parameter = annoncørNo_ != null ?
                new ObjectParameter("AnnoncørNo_", annoncørNo_) :
                new ObjectParameter("AnnoncørNo_", typeof(string));
    
            var mediebureauParameter = mediebureau != null ?
                new ObjectParameter("Mediebureau", mediebureau) :
                new ObjectParameter("Mediebureau", typeof(string));
    
            var konsulentCodeParameter = konsulentCode != null ?
                new ObjectParameter("KonsulentCode", konsulentCode) :
                new ObjectParameter("KonsulentCode", typeof(string));
    
            var antalBladeParameter = antalBlade.HasValue ?
                new ObjectParameter("AntalBlade", antalBlade) :
                new ObjectParameter("AntalBlade", typeof(byte));
    
            var formatParameter = format != null ?
                new ObjectParameter("Format", format) :
                new ObjectParameter("Format", typeof(string));
    
            var antalFarverParameter = antalFarver.HasValue ?
                new ObjectParameter("AntalFarver", antalFarver) :
                new ObjectParameter("AntalFarver", typeof(byte));
    
            var placeringIDParameter = placeringID.HasValue ?
                new ObjectParameter("PlaceringID", placeringID) :
                new ObjectParameter("PlaceringID", typeof(byte));
    
            var antalIndrykningerParameter = antalIndrykninger.HasValue ?
                new ObjectParameter("AntalIndrykninger", antalIndrykninger) :
                new ObjectParameter("AntalIndrykninger", typeof(byte));
    
            var visPlaceringUBParameter = visPlaceringUB.HasValue ?
                new ObjectParameter("VisPlaceringUB", visPlaceringUB) :
                new ObjectParameter("VisPlaceringUB", typeof(bool));
    
            var svarIndenParameter = svarInden.HasValue ?
                new ObjectParameter("SvarInden", svarInden) :
                new ObjectParameter("SvarInden", typeof(System.DateTime));
    
            var bemærkningParameter = bemærkning != null ?
                new ObjectParameter("Bemærkning", bemærkning) :
                new ObjectParameter("Bemærkning", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OpretForespørgsel", typeParameter, medieplanNrParameter, annoncørNo_Parameter, mediebureauParameter, konsulentCodeParameter, antalBladeParameter, formatParameter, antalFarverParameter, placeringIDParameter, antalIndrykningerParameter, visPlaceringUBParameter, svarIndenParameter, bemærkningParameter);
        }
    
        public virtual int OpretForespørgselsLinjer(Nullable<int> forespørgselID, Nullable<int> bladID, Nullable<decimal> dLUMmPris, Nullable<double> dLUMmRabat, Nullable<decimal> dLUFarveTillæg, Nullable<double> dLUFarveRabat)
        {
            var forespørgselIDParameter = forespørgselID.HasValue ?
                new ObjectParameter("ForespørgselID", forespørgselID) :
                new ObjectParameter("ForespørgselID", typeof(int));
    
            var bladIDParameter = bladID.HasValue ?
                new ObjectParameter("BladID", bladID) :
                new ObjectParameter("BladID", typeof(int));
    
            var dLUMmPrisParameter = dLUMmPris.HasValue ?
                new ObjectParameter("DLUMmPris", dLUMmPris) :
                new ObjectParameter("DLUMmPris", typeof(decimal));
    
            var dLUMmRabatParameter = dLUMmRabat.HasValue ?
                new ObjectParameter("DLUMmRabat", dLUMmRabat) :
                new ObjectParameter("DLUMmRabat", typeof(double));
    
            var dLUFarveTillægParameter = dLUFarveTillæg.HasValue ?
                new ObjectParameter("DLUFarveTillæg", dLUFarveTillæg) :
                new ObjectParameter("DLUFarveTillæg", typeof(decimal));
    
            var dLUFarveRabatParameter = dLUFarveRabat.HasValue ?
                new ObjectParameter("DLUFarveRabat", dLUFarveRabat) :
                new ObjectParameter("DLUFarveRabat", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OpretForespørgselsLinjer", forespørgselIDParameter, bladIDParameter, dLUMmPrisParameter, dLUMmRabatParameter, dLUFarveTillægParameter, dLUFarveRabatParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OpretKontakt(string emailAdr)
        {
            var emailAdrParameter = emailAdr != null ?
                new ObjectParameter("EmailAdr", emailAdr) :
                new ObjectParameter("EmailAdr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OpretKontakt", emailAdrParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OpretNyMediePlan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OpretNyMediePlan");
        }
    
        public virtual int SearchAllTables(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTables", searchStrParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
